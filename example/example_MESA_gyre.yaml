# example_MESA.yaml
# Configuration for mesalab - Example Analysis Workflow

# --- Required Input/Output Paths ---
# These are essential for mesalab to find your MESA data and save results.
# IMPORTANT: Replace these with your actual paths!

# --- General Settings ---
general_settings:
  # The base directory containing your MESA run subdirectories (e.g., '1.0M_solar/Z0.01/'),
  # each with its 'LOGS' and 'profiles.data' files.
  input_dir: MESA_grid

  # The base directory where all mesalab outputs (analysis results, plots, GYRE output) will be saved.
  output_dir: MESA_grid_output

  # The common part of your MESA inlist filename (e.g., 'inlist_project' if your inlist is 'inlist_project').
  # Used to identify relevant run directories.
  inlist_name: "inlist_project"

  # If you've run a full analysis before and the 'detail_z*.csv' files exist,
  # set this to 'false' to skip re-processing the detailed MESA profiles, speeding things up.
  # Set to 'true' to force a complete reanalysis from scratch, recalculating all derived quantities.
  force_reanalysis: True

  # Set to 'true' for highly verbose logging output (DEBUG level) suitable for development and troubleshooting.
  # Set to 'false' to reduce log verbosity, showing only INFO, WARNING, ERROR, and CRITICAL messages for regular operation.
  debug: False

  # --- Optional: MESA SDK and GYRE Installation Paths ---
  # These can also be set via environment variables (MESASDK_ROOT and GYRE_DIR).
  # If defined here, they will override environment variables or default system PATH lookups.
  # mesasdk_root: /path/to/your/mesasdk_root # e.g., /home/user/mesa-r22.05
  # gyre_dir: /path/to/your/gyre_installation_bin_directory # e.g., /home/user/gyre/bin (ensure this points to the 'bin' folder)

# --- Analysis Options ---
blue_loop_analysis:
  # This is CRITICAL for blue loop plotting. Setting this to 'true' ensures
  # the detailed blue loop analysis data is generated and processed.
  analyze_blue_loop: True

  # Defines the columns saved in the detailed blue loop CSV files.
  # 'all' saves all relevant columns from the blue loop phase.
  # 'summary' saves only a condensed set of key columns (e.g., star_age, log_Teff, log_L).
  blue_loop_output_type: "summary"

# --- Plotting Specific Settings ---
plotting_settings:
  # Set to 'true' to enable heatmap generation for cross-grid data (if applicable).
  generate_heatmaps: True

  # This controls the generation of the main HR diagrams for your MESA tracks.
  # Options:
  #   - 'none': (or omit this line entirely) Does NOT generate HR diagrams.
  #   - 'all': Generates standard HRDs with full evolutionary tracks (including pre-main sequence).
  #   - 'drop_zams': Generates HRDs where the pre-main sequence (ZAMS) phase is trimmed,
  #                  focusing on the post-ZAMS evolution.
  generate_hr_diagrams: "all"

  # Set to 'true' to generate specific blue loop HRD/CMD/logg-L plots
  # that include bolometric corrections, providing detailed visual analysis
  # of the blue loop phase. Requires 'analyze_blue_loop: True'.
  generate_blue_loop_plots_with_bc: True


# --- GYRE Workflow Specific Settings ---
# This section controls the execution of the GYRE pulsation analysis.
gyre_workflow:
  # Set to 'true' to enable and execute the full GYRE workflow.
  # If 'false', all other GYRE settings in this section will be ignored.
  run_gyre_workflow: True

  # Path to the GYRE inlist template file. This can be an absolute path
  # (e.g., '/home/user/my_gyre_templates/my_gyre.in') or a path relative to where
  # you run the mesalab command (e.g., 'config/gyre.in').
  # mesalab will read this template, insert the MESA profile path, and create a
  # temporary inlist for each GYRE run.
  gyre_inlist_template_path: "../config/gyre.in" # Update this to your actual path!

  # Determines which MESA profiles are processed by GYRE.
  # Options:
  #   - 'ALL_PROFILES': GYRE will be run for every single MESA profile available
  #                     that matches the 'mesa_profile_pattern'.
  #   - 'FILTERED_PROFILES': GYRE will only be run for profiles identified in the
  #                          'filtered_profiles_csv_name' CSV file generated by mesa_analyzer.
  run_mode: FILTERED_PROFILES # Consider setting this to ALL_PROFILES initially for testing

  # The number of OpenMP threads that each *individual* GYRE process should use.
  # This affects the performance of a single GYRE calculation.
  num_gyre_threads: 4

  # Subdirectory within 'output_dir' to store GYRE runs
  gyre_output_subdir: "./gyre_outputs"       

  # Set to 'true' to enable parallel execution of multiple GYRE runs simultaneously.
  # This is highly recommended for large grids to speed up the workflow.
  # If 'false', GYRE runs will be executed sequentially.
  enable_gyre_parallel: True

  # When 'enable_parallel' is 'true', this specifies the maximum number of
  # concurrent GYRE processes that mesalab will launch at any given time.
  # Adjust this based on your system's CPU core count and available RAM.
  max_concurrent_gyre_runs: 8 # Typically 1-2x your number of physical CPU cores

  # --- Profile Matching and Generation Settings ---
  # These parameters define how MESA profile filenames are handled.

  # This pattern is used for direct file discovery when 'run_mode' is 'ALL_PROFILES'.
  # It is also used as a *template* for generating expected profile filenames
  # when 'run_mode' is 'FILTERED_PROFILES'.
  # IMPORTANT: For 'FILTERED_PROFILES' mode, this string *must* contain a
  # format specifier (e.g., '{:05d}') that will be replaced by the profile number.
  mesa_profile_pattern: "profile{:05d}.data.GYRE" # Example: "profile00042.data.GYRE"

  # The relative path from a MESA run's top directory to its 'LOGS' folder,
  # which is the default location for MESA profiles (e.g., profile*.data.GYRE).
  # You can modify this setting if your profile files are stored in a different directory.
  # "LOGS" by default.
  mesa_profile_base_dir_relative: "LOGS"


# --- RSP Workflow Specific Settings ---
# This section controls the execution of MESA RSP module.
rsp_workflow:
# Set to 'false' to disable and execute the full RSP workflow.
# All other RSP settings in this section will be ignored.
  run_rsp_workflow: False 
  